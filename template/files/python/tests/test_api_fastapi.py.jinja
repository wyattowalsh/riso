"""FastAPI module smoke tests."""

from http import HTTPStatus

import pytest

API_DISABLED = {{ "True" if api_tracks | lower not in ["python", "python+node"] else "False" }}

if API_DISABLED:
    pytest.skip("Python API module disabled", allow_module_level=True)

testclient_module = pytest.importorskip(
    "fastapi.testclient",
    reason="FastAPI TestClient not installed",
)
TestClient = testclient_module.TestClient
EXPECTED_PORT = 9090


def test_health_endpoint_returns_ok(monkeypatch: pytest.MonkeyPatch) -> None:
    """Ensure health check endpoint reports service status."""
    monkeypatch.setenv("RISO_API_SERVICE_NAME", "riso-api")

    from {{ package_name }}.api.main import app  # noqa: PLC0415
    from {{ package_name }}.api.settings import ApiSettings  # noqa: PLC0415

    client = TestClient(app)
    response = client.get("/health")

    assert response.status_code == HTTPStatus.OK

    payload = response.json()
    assert payload["status"] == "ok"
    assert payload["service"] == ApiSettings().service_name


def test_settings_use_environment_overrides(monkeypatch: pytest.MonkeyPatch) -> None:
    """Settings should read overrides from environment variables."""
    monkeypatch.setenv("RISO_API_HOST", "127.0.0.1")
    monkeypatch.setenv("RISO_API_PORT", "9090")

    from {{ package_name }}.api.settings import ApiSettings  # noqa: PLC0415

    settings = ApiSettings()
    assert settings.host == "127.0.0.1"
    assert settings.port == EXPECTED_PORT
